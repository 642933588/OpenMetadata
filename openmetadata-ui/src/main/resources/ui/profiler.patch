diff --git a/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/AddDataQualityTestV1.tsx b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/AddDataQualityTestV1.tsx
new file mode 100644
index 000000000..102dccec4
--- /dev/null
+++ b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/AddDataQualityTestV1.tsx
@@ -0,0 +1,79 @@
+/*
+ *  Copyright 2022 Collate
+ *  Licensed under the Apache License, Version 2.0 (the "License");
+ *  you may not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+import React, { useMemo } from 'react';
+import C1 from './FormsV1/C1';
+import C2 from './FormsV1/C2';
+import C3 from './FormsV1/C3';
+
+interface Props {
+  activeStep: number;
+  onBack: () => void;
+  onNext: () => void;
+  onCancel: () => void;
+  onSubmit: () => void;
+  params: {
+    fqn: string;
+    tab: string;
+  };
+}
+
+const AddDataQualityTestV1 = ({
+  activeStep,
+  onCancel,
+  onNext,
+  onBack,
+  onSubmit,
+  params: { fqn, tab },
+}: Props) => {
+  const TABLE_STEPPER = useMemo(
+    () => ({
+      STEP_1: <C1 onCancel={onCancel} onNext={onNext} />,
+      STEP_2: <C2 onBack={onBack} onNext={onNext} />,
+      STEP_3: <C3 onBack={onBack} onSubmit={onSubmit} />,
+    }),
+    []
+  );
+
+  const COLUMN_STEPPER = useMemo(
+    () => ({
+      STEP_1: <C1 onCancel={onCancel} onNext={onNext} />,
+      STEP_2: <C2 onBack={onBack} onNext={onNext} />,
+      STEP_3: <C3 onBack={onBack} onSubmit={onSubmit} />,
+    }),
+    []
+  );
+
+  const getStepperComponents = () => {
+    switch (tab) {
+      case 'column':
+        return COLUMN_STEPPER;
+      case 'table':
+        return TABLE_STEPPER;
+      default:
+        return TABLE_STEPPER;
+    }
+  };
+
+  return (
+    <div
+      className="tw-max-w-xl tw-mx-auto tw-pb-6"
+      data-testid="add-data-quality-test">
+      {activeStep === 1 && getStepperComponents().STEP_1}
+      {activeStep === 2 && getStepperComponents().STEP_2}
+      {activeStep === 3 && getStepperComponents().STEP_3}
+    </div>
+  );
+};
+
+export default AddDataQualityTestV1;
diff --git a/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C1.tsx b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C1.tsx
new file mode 100644
index 000000000..da476d91e
--- /dev/null
+++ b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C1.tsx
@@ -0,0 +1,51 @@
+/*
+ *  Copyright 2022 Collate
+ *  Licensed under the Apache License, Version 2.0 (the "License");
+ *  you may not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+import classNames from 'classnames';
+import React from 'react';
+import { Button } from '../../buttons/Button/Button';
+import { Field } from '../../Field/Field';
+
+interface Props {
+  onCancel: () => void;
+  onNext: () => void;
+}
+
+const C1: Function = ({ onCancel, onNext }: Props) => {
+  return (
+    <div>
+      <Field className="tw-flex tw-justify-end tw-mt-10">
+        <Button
+          className={classNames('tw-mr-2')}
+          data-testid="previous-button"
+          size="regular"
+          theme="primary"
+          variant="text"
+          onClick={onCancel}>
+          <span>Cancel</span>
+        </Button>
+
+        <Button
+          data-testid="next-button"
+          size="regular"
+          theme="primary"
+          variant="contained"
+          onClick={onNext}>
+          <span>Next</span>
+        </Button>
+      </Field>
+    </div>
+  );
+};
+
+export default C1;
diff --git a/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C2.tsx b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C2.tsx
new file mode 100644
index 000000000..21f835ee5
--- /dev/null
+++ b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C2.tsx
@@ -0,0 +1,51 @@
+/*
+ *  Copyright 2022 Collate
+ *  Licensed under the Apache License, Version 2.0 (the "License");
+ *  you may not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+import classNames from 'classnames';
+import React from 'react';
+import { Button } from '../../buttons/Button/Button';
+import { Field } from '../../Field/Field';
+
+interface Props {
+  onNext: () => void;
+  onBack: () => void;
+}
+
+const C2: Function = ({ onBack, onNext }: Props) => {
+  return (
+    <div>
+      <Field className="tw-flex tw-justify-end tw-mt-10">
+        <Button
+          className={classNames('tw-mr-2')}
+          data-testid="previous-button"
+          size="regular"
+          theme="primary"
+          variant="text"
+          onClick={onBack}>
+          <span>Back</span>
+        </Button>
+
+        <Button
+          data-testid="next-button"
+          size="regular"
+          theme="primary"
+          variant="contained"
+          onClick={onNext}>
+          <span>Next</span>
+        </Button>
+      </Field>
+    </div>
+  );
+};
+
+export default C2;
diff --git a/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C3.tsx b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C3.tsx
new file mode 100644
index 000000000..d13d33e3b
--- /dev/null
+++ b/openmetadata-ui/src/main/resources/ui/src/components/AddDataQualityTest/FormsV1/C3.tsx
@@ -0,0 +1,51 @@
+/*
+ *  Copyright 2022 Collate
+ *  Licensed under the Apache License, Version 2.0 (the "License");
+ *  you may not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+import classNames from 'classnames';
+import React from 'react';
+import { Button } from '../../buttons/Button/Button';
+import { Field } from '../../Field/Field';
+
+interface Props {
+  onNext: () => void;
+  onBack: () => void;
+}
+
+const C3: Function = ({ onBack, onNext }: Props) => {
+  return (
+    <div>
+      <Field className="tw-flex tw-justify-end tw-mt-10">
+        <Button
+          className={classNames('tw-mr-2')}
+          data-testid="previous-button"
+          size="regular"
+          theme="primary"
+          variant="text"
+          onClick={onBack}>
+          <span>Back</span>
+        </Button>
+
+        <Button
+          data-testid="next-button"
+          size="regular"
+          theme="primary"
+          variant="contained"
+          onClick={onNext}>
+          <span>Submit</span>
+        </Button>
+      </Field>
+    </div>
+  );
+};
+
+export default C3;
diff --git a/openmetadata-ui/src/main/resources/ui/src/constants/constants.ts b/openmetadata-ui/src/main/resources/ui/src/constants/constants.ts
index 95e70b610..30a4ebea6 100644
--- a/openmetadata-ui/src/main/resources/ui/src/constants/constants.ts
+++ b/openmetadata-ui/src/main/resources/ui/src/constants/constants.ts
@@ -232,6 +232,8 @@ export const ROUTES = {
   ADD_POLICY: '/settings/access/policies/add-policy',
   ADD_POLICY_RULE: `/settings/access/policies/${PLACEHOLDER_ROUTE_FQN}/add-rule`,
   EDIT_POLICY_RULE: `/settings/access/policies/${PLACEHOLDER_ROUTE_FQN}/edit-rule/${PLACEHOLDER_RULE_NAME}`,
+
+  DATA_QUALITY_TEST: `/table/${PLACEHOLDER_ROUTE_TAB}/${PLACEHOLDER_ROUTE_FQN}/test`,
 };
 
 export const SOCKET_EVENTS = {
diff --git a/openmetadata-ui/src/main/resources/ui/src/pages/DataQualityTest/DataQualityTest.component.tsx b/openmetadata-ui/src/main/resources/ui/src/pages/DataQualityTest/DataQualityTest.component.tsx
new file mode 100644
index 000000000..c54e2b743
--- /dev/null
+++ b/openmetadata-ui/src/main/resources/ui/src/pages/DataQualityTest/DataQualityTest.component.tsx
@@ -0,0 +1,112 @@
+/*
+ *  Copyright 2022 Collate
+ *  Licensed under the Apache License, Version 2.0 (the "License");
+ *  you may not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+import { StepperStepType } from 'Models';
+import React, { FunctionComponent, useCallback, useState } from 'react';
+import { useHistory, useParams } from 'react-router-dom';
+import AddDataQualityTestV1 from '../../components/AddDataQualityTest/AddDataQualityTestV1';
+import TitleBreadcrumb from '../../components/common/title-breadcrumb/title-breadcrumb.component';
+import PageContainerV1 from '../../components/containers/PageContainerV1';
+import PageLayout from '../../components/containers/PageLayout';
+import IngestionStepper from '../../components/IngestionStepper/IngestionStepper.component';
+import { ROUTES } from '../../constants/constants';
+import { PageLayoutType } from '../../enums/layout.enum';
+
+const DataQualityTest: FunctionComponent = () => {
+  const { fqn, tab } = useParams<{ fqn: string; tab: string }>();
+  const [activeServiceStep, setActiveServiceStep] = useState(1);
+  const history = useHistory();
+
+  const STEPS_FOR_ADD_SERVICE: Array<StepperStepType> = [
+    { name: 'Select Service Type', step: 1 },
+    { name: 'Configure Service', step: 2 },
+    { name: 'Connection Details', step: 3 },
+  ];
+
+  const handleConfigureServiceBackClick = () => {
+    setActiveServiceStep((prev) => prev - 1);
+  };
+
+  const handleSelectServiceCancel = () => {
+    history.push(ROUTES.SERVICES);
+  };
+
+  const handleSelectServiceNextClick = () => {
+    setActiveServiceStep((prev) => prev + 1);
+  };
+
+  const fetchRightPanel = useCallback(() => {
+    return (
+      <div className="tw-px-2">
+        <h6 className="tw-heading tw-text-base">Configure Webhooks</h6>
+        <div className="tw-mb-5">
+          We are inherently data people. Our work revolves around the data
+          world. We’re connecting the dots to channel data to drive actionable
+          insights. Paving the road to innovation by simplifying what’s at the
+          core of data: Metadata! With emerging technologies and access to an
+          abundance of the world’s knowledge, we are exposed to exponential
+          volumes of data. You literally have all that you need, but just need
+          some digging. Collate is focussed on helping organizations get to
+          exactly what they are looking for, quickly. Delivering data
+          intelligence to expedite innovation in every sphere (you name it)!
+        </div>
+      </div>
+    );
+  }, []);
+
+  return (
+    <PageContainerV1>
+      <div className="tw-self-center">
+        <div className="add-webhook-container">
+          <PageLayout
+            classes="tw-max-w-full-hd tw-h-full tw-pt-4"
+            header={
+              <TitleBreadcrumb
+                titleLinks={[
+                  {
+                    name: 'header',
+                    url: '',
+                    activeTitle: true,
+                  },
+                ]}
+              />
+            }
+            layout={PageLayoutType['2ColRTL']}
+            rightPanel={fetchRightPanel()}>
+            <div className="tw-form-container tw-p">
+              <div data-testid="add-new-service-container">
+                <h6 className="tw-heading tw-text-base" data-testid="header">
+                  Add New Service
+                </h6>
+                <IngestionStepper
+                  activeStep={activeServiceStep}
+                  steps={STEPS_FOR_ADD_SERVICE}
+                />
+                <div className="tw-pt-5" />
+                <AddDataQualityTestV1
+                  activeStep={activeServiceStep}
+                  params={{ fqn, tab }}
+                  onBack={handleConfigureServiceBackClick}
+                  onCancel={handleSelectServiceCancel}
+                  onNext={handleSelectServiceNextClick}
+                />
+              </div>
+            </div>
+          </PageLayout>
+        </div>
+      </div>
+    </PageContainerV1>
+  );
+};
+
+export default DataQualityTest;
diff --git a/openmetadata-ui/src/main/resources/ui/src/pages/DatasetDetailsPage/DatasetDetailsPage.component.tsx b/openmetadata-ui/src/main/resources/ui/src/pages/DatasetDetailsPage/DatasetDetailsPage.component.tsx
index a12fccb04..1a6b6421a 100644
--- a/openmetadata-ui/src/main/resources/ui/src/pages/DatasetDetailsPage/DatasetDetailsPage.component.tsx
+++ b/openmetadata-ui/src/main/resources/ui/src/pages/DatasetDetailsPage/DatasetDetailsPage.component.tsx
@@ -215,14 +215,16 @@ const DatasetDetailsPage: FunctionComponent = () => {
     testMode?: DatasetTestModeType,
     columnName?: string
   ) => {
-    activeTabHandler(tabValue);
-    if (testMode) {
-      setTestMode(testMode as DatasetTestModeType);
-      setShowTestForm(true);
-      if (columnName) {
-        setSelectedColumn(columnName);
-      }
-    }
+    history.push(`/table/column/address/test`);
+        
+    // activeTabHandler(tabValue);
+    // if (testMode) {
+    //   setTestMode(testMode as DatasetTestModeType);
+    //   setShowTestForm(true);
+    //   if (columnName) {
+    //     setSelectedColumn(columnName);
+    //   }
+    // }
   };
 
   const getLineageData = () => {
diff --git a/openmetadata-ui/src/main/resources/ui/src/router/AuthenticatedAppRouter.tsx b/openmetadata-ui/src/main/resources/ui/src/router/AuthenticatedAppRouter.tsx
index 6b2757976..bf117c044 100644
--- a/openmetadata-ui/src/main/resources/ui/src/router/AuthenticatedAppRouter.tsx
+++ b/openmetadata-ui/src/main/resources/ui/src/router/AuthenticatedAppRouter.tsx
@@ -194,6 +194,10 @@ const EditRulePage = withSuspenseFallback(
   )
 );
 
+const DataQualityTest = withSuspenseFallback(
+  React.lazy(() => import('../pages/DataQualityTest/DataQualityTest.component'))
+);
+
 const AuthenticatedAppRouter: FunctionComponent = () => {
   return (
     <Switch>
@@ -402,6 +406,12 @@ const AuthenticatedAppRouter: FunctionComponent = () => {
         path={ROUTES.SETTINGS_WITH_TAB_FQN}
       />
 
+      <Route
+        exact
+        component={DataQualityTest}
+        path={ROUTES.DATA_QUALITY_TEST}
+      />
+
       <Redirect to={ROUTES.NOT_FOUND} />
     </Switch>
   );
